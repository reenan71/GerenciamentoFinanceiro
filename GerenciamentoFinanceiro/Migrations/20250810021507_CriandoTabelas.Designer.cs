// <auto-generated />
using System;
using GerenciamentoFinanceiro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciamentoFinanceiro.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250810021507_CriandoTabelas")]
    partial class CriandoTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GerenciamentoFinanceiro.Models.CategoriaModel", b =>
                {
                    b.Property<string>("CategoriaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            CategoriaId = "educacao",
                            Nome = "Educação"
                        },
                        new
                        {
                            CategoriaId = "salario",
                            Nome = "Salário"
                        },
                        new
                        {
                            CategoriaId = "viagem",
                            Nome = "Viagem"
                        },
                        new
                        {
                            CategoriaId = "mercado",
                            Nome = "Mercado"
                        });
                });

            modelBuilder.Entity("GerenciamentoFinanceiro.Models.FinanceiroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransacaoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TransacaoId");

                    b.ToTable("Financeiro");
                });

            modelBuilder.Entity("GerenciamentoFinanceiro.Models.TransacaoModel", b =>
                {
                    b.Property<string>("TransacaoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransacaoId");

                    b.ToTable("Transacao");

                    b.HasData(
                        new
                        {
                            TransacaoId = "ganho",
                            Nome = "Ganho"
                        },
                        new
                        {
                            TransacaoId = "perda",
                            Nome = "Perda"
                        });
                });

            modelBuilder.Entity("GerenciamentoFinanceiro.Models.FinanceiroModel", b =>
                {
                    b.HasOne("GerenciamentoFinanceiro.Models.CategoriaModel", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoFinanceiro.Models.TransacaoModel", "Transacao")
                        .WithMany()
                        .HasForeignKey("TransacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Transacao");
                });
#pragma warning restore 612, 618
        }
    }
}
